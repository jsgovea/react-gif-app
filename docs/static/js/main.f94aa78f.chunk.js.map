{"version":3,"sources":["components/AddCategory.js","helpers/getGifs.js","components/GifGridItem.js","components/Loader.js","components/GifGrid.js","hooks/useFetchGifs.js","GifExpertApp.js","index.js"],"names":["AddCategory","setCategories","useState","inputValue","setInputValue","onSubmit","e","preventDefault","trim","length","cats","type","value","onChange","target","getGifs","category","a","url","encodeURI","fetch","resp","json","data","gifs","map","img","id","title","images","downsized_medium","GifGridItem","className","style","marginBottom","src","alt","Loader","props","speed","width","height","viewBox","backgroundColor","foregroundColor","x","y","rx","ry","GifGrid","loading","state","setstate","useEffect","then","imgs","useFetchGifs","key","GifExpertApp","categories","ReactDOM","render","document","getElementById"],"mappings":"iPAGaA,EAAc,SAAC,GAAuB,IAArBC,EAAoB,EAApBA,cAAoB,EACVC,mBAAS,IADC,mBACvCC,EADuC,KAC3BC,EAD2B,KAe9C,OACI,0BAAMC,SATW,SAACC,GAClBA,EAAEC,iBACEJ,EAAWK,OAAOC,OAAS,IAC3BR,GAAc,SAAAS,GAAI,OAAKP,GAAL,mBAAoBO,OACtCN,EAAc,OAMd,2BACIO,KAAK,OACLC,MAAOT,EACPU,SAjBc,SAACP,GACvBF,EAAcE,EAAEQ,OAAOF,Y,uBCLlBG,EAAO,uCAAG,WAAMC,GAAN,uBAAAC,EAAA,6DACbC,EADa,0FAC4EC,UAAUH,GADtF,sBAEAI,MAAMF,GAFN,cAEbG,EAFa,gBAGEA,EAAKC,OAHP,uBAGZC,EAHY,EAGZA,KAEDC,EAAOD,EAAKE,KAAI,SAAAC,GAAQ,IAAD,EACzB,MAAO,CACHC,GAAID,EAAIC,GACRC,MAAOF,EAAIE,MACXV,IAAG,UAAEQ,EAAIG,cAAN,aAAE,EAAYC,iBAAiBZ,QATvB,kBAYZM,GAZY,4CAAH,sDCAPO,EAAc,SAAC,GAAqB,EAApBJ,GAAqB,IAAjBC,EAAgB,EAAhBA,MAAOV,EAAS,EAATA,IAEpC,OACI,yBAAKc,UAAU,6CAA6CC,MAAO,CAACC,aAAc,SAC9E,yBAAKF,UAAU,eAAeG,IAAKjB,EAAKkB,IAAKR,IAC7C,uBAAGI,UAAU,cAAcJ,K,OCYxBS,EAhBA,SAACC,GAAD,OACX,kBAAC,IAAD,eACIC,MAAO,EACPC,MAAO,IACPC,OAAQ,IACRC,QAAQ,cACRC,gBAAgB,UAChBC,gBAAgB,WACZN,GAGJ,0BAAMO,EAAE,KAAKC,EAAE,KAAKC,GAAG,IAAIC,GAAG,IAAIR,MAAM,MAAMC,OAAO,OACrD,0BAAMI,EAAE,IAAIC,EAAE,KAAKC,GAAG,IAAIC,GAAG,IAAIR,MAAM,MAAMC,OAAO,UCV/CQ,EAAU,SAAC,GAAkB,IAAhBjC,EAAe,EAAfA,SAAe,ECFb,SAACA,GAAc,IAAD,EACZd,mBAAS,CAC/BqB,KAAM,GACN2B,SAAS,IAHyB,mBAC/BC,EAD+B,KACxBC,EADwB,KAgBtC,OAVAC,qBAAU,WACNtC,EAAQC,GAAUsC,MAAK,SAAAC,GACnBH,EAAS,CACT7B,KAAMgC,EACNL,SAAS,SAGd,CAAClC,IAGGmC,EDb2BK,CAAaxC,GAAjCa,EADuB,EAC7BN,KAAc2B,EADe,EACfA,QAEtB,OACI,oCACA,wBAAIlB,UAAU,yCAAyChB,GAErDkC,GAAW,kBAAC,EAAD,MAEb,yBAAKlB,UAAU,aAEPH,EAAOJ,KAAI,SAAAC,GAAG,OACV,kBAAC,EAAD,eACA+B,IAAK/B,EAAIC,IACLD,UEUTgC,MAzBf,WAAyB,IAAD,EACgBxD,mBAAS,CAAC,cAD1B,mBACbyD,EADa,KACD1D,EADC,KAMpB,OACI,oCACI,4CACA,kBAAC,EAAD,CAAaA,cAAeA,IAC5B,6BACA,4BAEQ0D,EAAWlC,KAAI,SAAAT,GAAQ,OACnB,kBAAC,EAAD,CACIyC,IAAKzC,EACLA,SAAUA,UCftC4C,IAASC,OACL,kBAAC,EAAD,MACFC,SAASC,eAAe,W","file":"static/js/main.f94aa78f.chunk.js","sourcesContent":["import React, { useState } from 'react';\nimport PropTypes from 'prop-types';\n\nexport const AddCategory = ({ setCategories }) => {\n    const [inputValue, setInputValue] = useState('');\n\n    const handleInputChange = (e) => {\n        setInputValue(e.target.value);\n    }\n\n    const handleSubmit = (e) => {\n        e.preventDefault();\n        if (inputValue.trim().length > 2) {\n            setCategories(cats => [inputValue, ...cats]);\n            setInputValue('');\n        }\n    }\n\n    return (\n        <form onSubmit={handleSubmit}>\n            <input\n                type=\"text\"\n                value={inputValue}\n                onChange={handleInputChange}\n            />\n        </form>\n    )\n}\n\n\nAddCategory.propTypes = {\n    setCategories: PropTypes.func.isRequired\n}\n","\n\nexport const getGifs = async(category) => {\n    const url = `https://api.giphy.com/v1/gifs/search?api_key=2Ztkk9WSCWA4w1hBiBMAoyNJBbpfpSew&q=${encodeURI(category)}&limit=10`;\n    const resp = await fetch(url);\n    const {data} = await resp.json();\n\n    const gifs = data.map(img => {\n        return {\n            id: img.id,\n            title: img.title,\n            url: img.images?.downsized_medium.url\n        }\n    })\n    return gifs;\n}\n","import React from 'react';\n\nexport const GifGridItem = ({id, title, url}) => {\n    // console.log({id, title, url});\n    return (\n        <div className=\"card animate__animated animate__fadeInDown\" style={{marginBottom: '1rem'}}>\n            <img className=\"card-img-top\" src={url} alt={title} />\n            <p className=\"card-title\">{title}</p>\n        </div>\n    )\n}","import React from 'react';\nimport ContentLoader from \"react-content-loader\";\n\nconst Loader = (props) => (\n    <ContentLoader\n        speed={2}\n        width={200}\n        height={200}\n        viewBox=\"0 0 400 460\"\n        backgroundColor=\"#f3f3f3\"\n        foregroundColor=\"#ecebeb\"\n        {...props}\n    >\n\n        <rect x=\"58\" y=\"18\" rx=\"2\" ry=\"2\" width=\"140\" height=\"10\" />\n        <rect x=\"1\" y=\"60\" rx=\"2\" ry=\"2\" width=\"400\" height=\"400\" />\n    </ContentLoader>\n);\n\nexport default Loader;\n","import React from 'react';\nimport { useFetchGifs } from '../hooks/useFetchGifs';\nimport { GifGridItem } from './GifGridItem';\nimport Loader from './Loader';\n\nexport const GifGrid = ({ category }) => {  \n    const { data: images, loading } = useFetchGifs(category);\n    \n    return(\n        <>\n        <h3 className=\"animate__animated animate__fadeInDown\">{category}</h3>\n\n        { loading && <Loader /> }\n\n        <div className=\"card-grid\">\n            {\n                images.map(img => (\n                    <GifGridItem \n                    key={img.id}\n                    {...img} />\n                ))\n            }\n        </div>\n        </>\n    )\n}","import { useState, useEffect } from 'react';\nimport { getGifs } from '../helpers/getGifs';\n\nexport const useFetchGifs = (category) => {\n    const [state, setstate] = useState({\n        data: [],\n        loading: true\n    });\n\n    useEffect(() => {\n        getGifs(category).then(imgs => {\n            setstate({\n            data: imgs,\n            loading: false\n        });\n    });\n    }, [category]);\n\n\n    return state;\n} \n\n","import React, { useState } from 'react';\nimport { AddCategory } from './components/AddCategory';\nimport { GifGrid } from './components/GifGrid';\n\nfunction GifExpertApp() {\n    const [categories, setCategories] = useState(['One Punch']);\n\n    // const handleAdd = () => {\n    //     setCategories(['HunterXHunter', ...categories]);\n    // }\n    return (\n        <>\n            <h2>GifExpertApp</h2>\n            <AddCategory setCategories={setCategories} />\n            <hr />\n            <ol>\n                {\n                    categories.map(category => (\n                        <GifGrid\n                            key={category}\n                            category={category}\n                        />\n                    ))\n                }\n            </ol>\n        </>\n    )\n}\n\nexport default GifExpertApp;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport GifExpertApp from './GifExpertApp';\n\nReactDOM.render(\n    <GifExpertApp />,\n  document.getElementById('root')\n);\n\n// GifExpertApp\n// <h2>GifExpertApp</h2>\n// <hr />"],"sourceRoot":""}